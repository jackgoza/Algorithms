# Lab case 1
2
2 1
1 5
6 7
4 3
# should output
# 16, 17
# 26, 22

# ingestor should handle newlines between inputs and WILL skip comment lines (lines starting with #)

# Lab case 2
4
3  2  1  4
-1  2  0  1
2  3 -1 -2
5  1  1  0
-1  2 -1  0
3 -1  0  2
-4  0 -3  1
0 -2  1  2

# should output
#   -1    -4    -2    13
#   7    -6     2     6
#  11     5    -1     1
#  -6     9    -8     3


# Lab case 3
8
1  0  1  2  0 -1 -1 -1
-1  1 -1  1  2  0  0  3
1 -1  2 -3 -1  1  1  0
0  2  3  2  1  0 -1 -2
2  3 -1  0 -1  0 -1  0
1  2  2  1  0  1  1  2
3 -1  0  2  2  2  2  1
2 -2  1 -3  3  0  1  2
1  0  1  2  0 -1 -1 -1
-1  1 -1  1  2  0  0  3
1 -1  2 -3 -1  1  1  0
0  2  3  2  1  0 -1 -2
2  3 -1  0 -1  0 -1  0
1  2  2  1  0  1  1  2
3 -1  0  2  2  2  2  1
2 -2  1 -3  3  0  1  2

# should output
#  -4     4     6     3    -4    -3    -6   -10  
#   7     4     0    -5    11     0     0     8  
#   6   -11     0    -8    -4     4     8     5  
#  -4    11     7     1    -6     1    -4    -3  
#  -7     2    -2     8     6    -5    -4     6  
#   9    -1    10    -3    11     4     5    10  
#  18     9    13    12     5     3     0    -2  
#  18    -5    -4   -11    -3     1     3     3  


# Additional 4x4 - 1
4
8 4 1 5
3 2 1 8
4 9 6 5
4 4 7 5
8 4 1 5
3 2 1 8
4 9 6 5
4 4 7 5

# should output
# Ordinary multiplication took 64 element multiplications.
# Strassen multiplication took 49 element multiplications.
#
#  100    69    53    102  
#  66    57    67    76  
#  103    108    84    147  
#  92    107    85    112  


# Additional 4x4 - 2
4
7 0 7 7
1 1 0 3
0 3 3 1
9 9 4 8
7 0 7 7
1 1 0 3
0 3 3 1
9 9 4 8

# should output
# Ordinary multiplication took 64 element multiplications.
# Strassen multiplication took 49 element multiplications.
#
#  112    84    98    112  
#  35    28    19    34  
#  12    21    13    20  
#  144    93    107    158   


# Additional 4x4 - 3
4
3 7 6 3
2 2 3 3
0 0 1 9
9 1 1 7
3 7 6 3
2 2 3 3
0 0 1 9
9 1 1 7

# should output
# Ordinary multiplication took 64 element multiplications.
# Strassen multiplication took 49 element multiplications.
#
#  50    38    48    105  
#  37    21    24    60  
#  81     9    10    72  
#  92    72    65    88  


# Additional 8x8 - 1
8
2 5 3 1 6 9 2 9
1 3 1 9 0 6 1 0
3 0 5 9 1 3 5 5
7 6 2 3 3 9 1 9
6 4 0 0 6 0 7 2
6 0 3 3 9 9 4 1
7 1 0 4 6 4 2 2
3 7 3 5 1 0 5 1
2 5 3 1 6 9 2 9
1 3 1 9 0 6 1 0
3 0 5 9 1 3 5 5
7 6 2 3 3 9 1 9
6 4 0 0 6 0 7 2
6 0 3 3 9 9 4 1
7 1 0 4 6 4 2 2
3 7 3 5 1 0 5 1


# Should output
# Successfully multiplied input of order 8:
# Ordinary multiplication took 512 element multiplications.
# Strassen multiplication took 343 element multiplications. 
#  156    120    82    157    156    155    152    76  
#  114    69    47    86    94    169    45    103  
#  158    113    76    129    118    170    94    153  
#  153    147    97    164    167    217    137    126  
#  107    87    28    80    116    106    82    82  
#  181    95    69    90    208    187    142    132  
#  123    102    48    58    140    149    91    121  
#  101    82    44    133    73    143    55    100  


# Additional 8x8 - 2
8
1 6 3 4 2 3 6 8
1 7 3 1 5 4 0 6
9 9 3 8 5 0 8 8
1 4 8 9 4 4 6 4
2 2 6 8 2 3 6 1
2 6 0 2 9 2 8 5
6 4 2 2 3 8 8 3
5 1 2 9 9 0 0 6
1 6 3 4 2 3 6 8
1 7 3 1 5 4 0 6
9 9 3 8 5 0 8 8
1 4 8 9 4 4 6 4
2 2 6 8 2 3 6 1
2 6 0 2 9 2 8 5
6 4 2 2 3 8 8 3
5 1 2 9 9 0 0 6


# Should output
# Successfully multiplied input of order 8:
# Ordinary multiplication took 512 element multiplications.
# Strassen multiplication took 343 element multiplications. 
#  124    145    102    176    184    103    138    167  
#  84    126    83    146    156    58    98    139  
#  151    226    189    269    216    174    220    259  
#  158    202    155    241    196    123    228    198  
#  117    159    120    173    134    106    192    149  
#  105    129    120    169    147    133    158    133  
#  115    179    92    145    179    131    210    181  
#  81    115    162    244    133    82    154    143  


# Additional 8x8 - 3
8
8 3 2 5 4 5 6 4
2 4 0 2 5 1 0 9
0 9 4 4 7 9 0 1
9 1 2 9 6 3 2 2
3 4 0 7 1 3 3 3
4 1 5 4 3 0 8 2
2 4 6 4 7 5 6 7
2 6 3 0 7 6 8 0
8 3 2 5 4 5 6 4
2 4 0 2 5 1 0 9
0 9 4 4 7 9 0 1
9 1 2 9 6 3 2 2
3 4 0 7 1 3 3 3
4 1 5 4 3 0 8 2
2 4 6 4 7 5 6 7
2 6 3 0 7 6 8 0


# Should output
# Successfully multiplied input of order 8:
# Ordinary multiplication took 512 element multiplications.
# Strassen multiplication took 343 element multiplications. 
#  167    128    107    171    180    142    178    135  
#  79    99    40    75    111    89    111    65  
#  113    119    72    155    138    84    109    132  
#  193    105    77    198    152    131    142    103  
#  122    69    62    117    126    76    101    92  
#  99    121    90    131    153    139    105    103  
#  127    179    118    171    207    173    173    131  
#  89    123    94    139    140    104    129    154  



##### ERROR CASE TESTING
# Order not a power of two
3
2 1 3
1 5 3
6 7 3
4 3 3
1 2 3
3 2 1

# Unable to multiply matrices for input:
# 3
# 2 1 3 1 5 3 6 7 3
# 4 3 3 1 2 3 3 2 1
#
# Reason:
# Exception('Order is not an exact power of two! Given: 3')

# Too few elements
4
2 1
1 5
6 7
4 3

# Should output:
# Unable to multiply matrices for input:
# 4
# 2 1 1 5 6 7 4 3
# 
# 
# Reason:
# Exception('Invalid input given! Not enough elements in matrix.')


# Too many elements
2
2 1 3
1 5 3
6 7 3
4 3 3
1 2 3
3 2 1

# Should output:
# Unable to multiply matrices for input:
# 2
# 2 1 3 1 5 3
# 6 7 3 4 3 3 1 2 3 3 2 1
# 
# Reason:
# Exception('Invalid input given! Too many elements in matrix.')
